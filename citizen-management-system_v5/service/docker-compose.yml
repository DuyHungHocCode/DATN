version: '3.8' # Phiên bản Docker Compose

networks:
  kafka_net: # Network riêng cho Kafka, Zookeeper, Kafka Connect
    driver: bridge
  app_db_net: # Network riêng cho các service ứng dụng và DB
    driver: bridge

services:
  # 1. Zookeeper (Giữ nguyên)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    networks:
      - kafka_net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  # 2. Kafka Broker (Giữ nguyên)
  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    networks:
      - kafka_net
    depends_on:
      - zookeeper
    ports:
      - "29092:29092" # Cổng cho kết nối từ bên ngoài (máy host)
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  # 3. Kafka UI (Giữ nguyên)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    networks:
      - kafka_net
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local-kafka-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  # 4. Service cho DB_BCA (Bộ Công an) - Tên mới: sqlserver_bca
  sqlserver_bca:
    image: mcr.microsoft.com/mssql/server:2019-latest # 2019-latest được dùng phổ biến với Debezium, cân nhắc 2022-latest nếu cần
    container_name: sqlserver_bca_container
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: 'Duyhung123' # KHUYẾN NGHỊ: Đổi mật khẩu mạnh hơn trong môi trường thực tế
      MSSQL_PID: 'Developer'
      MSSQL_AGENT_ENABLED: "True" # RẤT QUAN TRỌNG: Đảm bảo SQL Server Agent được bật cho CDC
    ports:
      - "1401:1433" # Map cổng 1401 của host vào cổng 1433 của container
    volumes:
      - sql_bca_data:/var/opt/mssql
    networks:
      - app_db_net # Kết nối vào network ứng dụng/DB
    healthcheck: # Healthcheck để đảm bảo DB sẵn sàng
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "Duyhung123", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # 5. Service cho DB_BTP (Bộ Tư pháp) - Tên mới: sqlserver_btp
  sqlserver_btp:
    image: mcr.microsoft.com/mssql/server:2019-latest # 2019-latest được dùng phổ biến với Debezium
    container_name: sqlserver_btp_container
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: 'Duyhung123' # KHUYẾN NGHỊ: Đổi mật khẩu mạnh hơn trong môi trường thực tế
      MSSQL_PID: 'Developer'
      MSSQL_AGENT_ENABLED: "True" # RẤT QUAN TRỌNG: Đảm bảo SQL Server Agent được bật cho CDC
    ports:
      - "1402:1433" # Map cổng 1402 của host vào cổng 1433 của container
    volumes:
      - sql_btp_data:/var/opt/mssql
    networks:
      - app_db_net
      - kafka_net # KẾT NỐI VÀO MẠNG CỦA KAFKA ĐỂ DEBEZIUM CÓ THỂ KẾT NỐI
    healthcheck: # Healthcheck để đảm bảo DB sẵn sàng
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "Duyhung123", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  

  # 7. Kafka Connect (chứa Debezium)
  connect:
    build:
      context: .
      dockerfile: Dockerfile.connect
    container_name: kafka-connect
    networks:
      - kafka_net
      - app_db_net
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: connect-cluster
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
      STATUS_STORAGE_TOPIC: connect-statuses
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KEY_CONVERTER_SCHEMAS_ENABLE: 'false'
      VALUE_CONVERTER_SCHEMAS_ENABLE: 'false'
      PLUGIN_PATH: /kafka/connect/debezium-connector-sqlserver
    depends_on:
      - kafka
      - zookeeper
      - sqlserver_btp
    command: bash -c "
      echo 'Waiting for SQL Server to be ready...' &&
      timeout 60 bash -c 'until sqlcmd -S sqlserver_btp -U sa -P \"Duyhung123\" -Q \"SELECT 1\" > /dev/null 2>&1; do echo \"Waiting for SQL Server...\"; sleep 5; done' &&
      echo 'SQL Server DB_BTP is up, starting Kafka Connect...' &&
      /kafka/connect/bin/connect-distributed.sh /kafka/connect/etc/connect-distributed.properties"
    restart: unless-stopped
    # LƯU Ý QUAN TRỌNG:
    # database.hostname trong JSON config cho Debezium sẽ là 'sqlserver_btp' (tên service)
    # database.user và database.password sẽ là 'sa' và 'Duyhung123' (hoặc mật khẩu bạn đã đổi)

# Định nghĩa các named volumes để lưu trữ dữ liệu bền vững
volumes:
  sql_bca_data:
    driver: local
  sql_btp_data:
    driver: local

# Định nghĩa network tùy chỉnh
networks:
  kafka_net:
    driver: bridge
  app_db_net:
    driver: bridge